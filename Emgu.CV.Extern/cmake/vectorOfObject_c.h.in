//----------------------------------------------------------------------------
//
//  Copyright (C) 2004-2018 by EMGU Corporation. All rights reserved.
//
//  Vector of ${VECTOR_NAME}
//
//  This file is automatically generated, do not modify.
//----------------------------------------------------------------------------


#pragma once
#ifndef EMGU_VECTOR_${VECTOR_NAME}_H
#define EMGU_VECTOR_${VECTOR_NAME}_H

#include "vectors_c.h"

${VECTOR_ADDITIONAL_INCLUDE}

//----------------------------------------------------------------------------
//
//  Vector of ${VECTOR_NAME}
//
//----------------------------------------------------------------------------
CVAPI(std::vector< ${VECTOR_ELEMENT} >*) VectorOf${VECTOR_NAME}Create();

CVAPI(std::vector< ${VECTOR_ELEMENT} >*) VectorOf${VECTOR_NAME}CreateSize(int size);

CVAPI(int) VectorOf${VECTOR_NAME}GetSize(std::vector< ${VECTOR_ELEMENT} >* v);

CVAPI(void) VectorOf${VECTOR_NAME}Push(std::vector< ${VECTOR_ELEMENT} >* v, ${VECTOR_ELEMENT}* value);

//CVAPI(void) VectorOf${VECTOR_NAME}PushMulti(std::vector< ${VECTOR_ELEMENT} >* v, ${VECTOR_ELEMENT}* values, int count);

CVAPI(void) VectorOf${VECTOR_NAME}PushVector(std::vector< ${VECTOR_ELEMENT} >* v, std::vector< ${VECTOR_ELEMENT} >* other);

CVAPI(void) VectorOf${VECTOR_NAME}Clear(std::vector< ${VECTOR_ELEMENT} >* v);

CVAPI(void) VectorOf${VECTOR_NAME}Release(std::vector< ${VECTOR_ELEMENT} >** v);

CVAPI(void) VectorOf${VECTOR_NAME}CopyData(std::vector< ${VECTOR_ELEMENT} >* v,  ${VECTOR_ELEMENT}* data);

CVAPI(${VECTOR_ELEMENT}*) VectorOf${VECTOR_NAME}GetStartAddress(std::vector< ${VECTOR_ELEMENT} >* v);

CVAPI(void) VectorOf${VECTOR_NAME}GetItemPtr(std::vector<  ${VECTOR_ELEMENT} >* vec, int index,  ${VECTOR_ELEMENT}** element);

CVAPI(cv::_InputArray*) cvInputArrayFromVectorOf${VECTOR_NAME}(std::vector< ${VECTOR_ELEMENT} >* vec);

CVAPI(cv::_OutputArray*) cvOutputArrayFromVectorOf${VECTOR_NAME}(std::vector< ${VECTOR_ELEMENT} >* vec);

CVAPI(cv::_InputOutputArray*) cvInputOutputArrayFromVectorOf${VECTOR_NAME}(std::vector< ${VECTOR_ELEMENT} >* vec);

CVAPI(int) VectorOf${VECTOR_NAME}SizeOfItemInBytes();

#endif
